using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Networking;

// NOTE: In order to avoid copyright issues, the music file is not uploaded to the repository.
// To get the sound playing in the online demo generated by the CI/CD, this script downloads the song from the web server.

public class MusicController : MonoBehaviour
{
    private const string ALTERNATIVE_AUDIO_MP3_URL = "https://savgs.xoanweb.com/wild-furious/demo/main_menu_song__compressed.mp3";
    private const string ALTERNATIVE_AUDIO_MP3_NAME = "main_menu_song__compressed.mp3";
    private const string ALTERNATIVE_AUDIO_OGG_URL = "https://savgs.xoanweb.com/wild-furious/demo/main_menu_song__compressed.mp3";
    private const string ALTERNATIVE_AUDIO_OGG_NAME = "main_menu_song__compressed.mp3";

    private static MusicController instance;

    [SerializeField] private AudioSource audioSource = null;

    private void Awake()
    {
        if (instance == null) instance = this;
        else Destroy(gameObject);
    }

    public void Play()
    {
        if (audioSource != null && !audioSource.isPlaying)
        {
            if (audioSource.clip != null)
            {
                audioSource.Play();
            }
            else
            {
                StartCoroutine(GetOnlineAudioClip());
            }
        }

        DontDestroyOnLoad(gameObject);
    }

    public void Stop()
    {
        if (audioSource != null && audioSource.isPlaying) audioSource.Stop();
        Destroy(gameObject);
    }

    private IEnumerator GetOnlineAudioClip()
    {
        string url = ALTERNATIVE_AUDIO_OGG_URL;
        string name = ALTERNATIVE_AUDIO_OGG_NAME;
        AudioType type = AudioType.OGGVORBIS;
        if (Application.platform == RuntimePlatform.WebGLPlayer)
        {
            url = ALTERNATIVE_AUDIO_MP3_URL;
            name = ALTERNATIVE_AUDIO_MP3_NAME;
            type = AudioType.MPEG;
        }

        UnityWebRequest www = UnityWebRequestMultimedia.GetAudioClip(url, type);
        yield return www.SendWebRequest();

        if (www.isNetworkError || www.isHttpError)
        {
            Debug.LogWarning(www.error);
        }
        else
        {
            AudioClip clip = DownloadHandlerAudioClip.GetContent(www);
            clip.name = name;
            audioSource.clip = clip;
            audioSource.Play();
        }
    }
}
